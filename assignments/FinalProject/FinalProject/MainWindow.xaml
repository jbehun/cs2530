<Window x:Class="FinalProject.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="700" Width="1050">

    <Window.Resources>
        <SolidColorBrush x:Key="HighlightedColorKey" Color="BurlyWood"/>
        <SolidColorBrush x:Key="BackgroundColorKey" Color="DarkGray"/>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="FontFamily" Value="Georgia"/>
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="Font">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Georgia"/>
        </Style>
        <Style TargetType="StackPanel" x:Key="Margin">
            <Setter Property="Margin" Value="25, 0, 0, 0"/>
            
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="DarkGray"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource HighlightedColorKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
       
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
  x:Name="Border" 
  Grid.ColumnSpan="2"
  CornerRadius="2"
  Background="#C0C0C0"
  BorderBrush="#404040"
  BorderThickness="1" />
                <Border 
  Grid.Column="0"
  CornerRadius="2,0,0,2" 
  Margin="1" 
  Background="#FFFFFF" 
  BorderBrush="#404040"
  BorderThickness="0,0,1,0" />
                <Path 
  x:Name="Arrow"
  Grid.Column="1"     
  Fill="#404040"
  HorizontalAlignment="Center"
  VerticalAlignment="Center"
  Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="BurlyWood" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
        Name="ToggleButton" 
        Template="{StaticResource ComboBoxToggleButton}" 
        Grid.Column="2" 
        Focusable="false"
        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
        ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
        Name="ContentSite"
        IsHitTestVisible="False" 
        Content="{TemplateBinding SelectionBoxItem}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        Margin="3,3,23,3"
        VerticalAlignment="Center"
        HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
        Style="{x:Null}" 
        Template="{StaticResource ComboBoxTextBox}" 
        HorizontalAlignment="Left" 
        VerticalAlignment="Center" 
        Margin="3,3,23,3"
        Focusable="True" 
        Background="Transparent"
        Visibility="Hidden"
        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsDropDownOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Slide">
                                <Grid 
          Name="DropDown"
          SnapsToDevicePixels="True"                
          MinWidth="{TemplateBinding ActualWidth}"
          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
            x:Name="DropDownBorder"
            Background="#FFFFFF"
            BorderThickness="1"
            BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"
           Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border 
      Name="Border"
      Padding="2"
      SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="BurlyWood"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <DockPanel>
        <Canvas DockPanel.Dock="Top" Background="Black" Height="200">
            <Image Source="TitleImage.jpg" Width="500" Height="200" Margin="300,0,150,0"/>
        </Canvas>
            <StackPanel Name="Panel" DockPanel.Dock="Left">
                <!--Select what position to filter-->
                <Grid Name="PositionGrid" Margin="0, 25, 0, 25" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Name="InLabel" Style="{StaticResource Font}" Content="Position: " Grid.Column="0" Grid.Row="0"/>
                    <ComboBox Name="PositionCbx" Grid.Column="1" Grid.Row="0" SelectedIndex="0" Width="100">

                        <ComboBoxItem Content="All"/>
                        <ComboBoxItem Content="Wide Receiver"/>
                        <ComboBoxItem Content="Running Back"/>
                        <ComboBoxItem Content="Quarter Back"/>
                        <ComboBoxItem Content="Tight End"/>
                    </ComboBox>
                </Grid>
                <Border BorderBrush="Black" BorderThickness="2" CornerRadius="10"/>
                <!--Select what yards to sort by and in what order-->
                <Label Style="{StaticResource Font}" Content="Sort" HorizontalAlignment="Left"/>
            <ComboBox Name="Yards" SelectedIndex="0" Margin="5,0,0,0">
                <ComboBoxItem Content="Receiving Yards"/>
                    <ComboBoxItem Content="Rushing Yards"/>
                    <ComboBoxItem Content="Passing Yards"/>
                    <ComboBoxItem Content="Return Yards"/>
                </ComboBox>
                <Label Style="{StaticResource Font}" Content="In" HorizontalAlignment="Left"/>
            <ComboBox Name="OrderCbx" Width="125" SelectedIndex="0"  HorizontalAlignment="Left"  Margin="5,0,0,0">
                    <ComboBoxItem Content="Ascending"/>
                    <ComboBoxItem Content="Descending"/>

                </ComboBox>
                <Label Style="{StaticResource Font}" Content="Order"/>
                <Border BorderBrush="Black" BorderThickness="2" CornerRadius="10"/>
                <!--Submit Button-->
                <Button Content="Filter" Width="75" HorizontalAlignment="Center" Margin="0, 75, 0, 0" Click="FilterButton"/>
                <Label Name="AddPlayer" Content=""/>
                <Button Content="Add Player to Picks" HorizontalAlignment="Center" Margin="0, 10, 0, 0" Click="AddPlayerButton"/>
                
            </StackPanel>
       


        <Grid Width="auto" DockPanel.Dock="Right" Margin="10,0,10,10">
            <DataGrid
				HorizontalAlignment="Left"
				Margin="0,10,0,0"
				VerticalAlignment="Top"
				Loaded="DataGrid_Loaded"
				AlternatingRowBackground="BurlyWood"
				FontSize="14"
				x:Name="TestGrid"
                />
                
        </Grid>
    </DockPanel>
</Window>
